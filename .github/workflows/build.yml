# Copyright 2020-2021 Koji Hasegawa. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
#
# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: build

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  pull_request:
    types: [ opened, synchronize, reopened ]  # Same as default
    paths-ignore:
      - '**.md'

jobs:

  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"  # Jobs ignored in this step are marked as "skipped" in GitHub Actions

    steps:
    - uses: actions/checkout@v2

    # Cache Gradle dependencies
    - name: Setup Gradle Dependencies Cache
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle.properties') }}

    # Cache Gradle Wrapper
    - name: Setup Gradle Wrapper Cache
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

    - name: Gradle Wrapper Validation
      uses: gradle/wrapper-validation-action@v1.0.4

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 11

    - name: Run tests
      run: ./gradlew test

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        path: build/reports/tests  # Not specify name reason is workaround "zip in zip" problem, see: https://github.com/actions/upload-artifact/issues/39
      if: always()  # Keep the test result as an artifact even if tests fails

    - name: Run detekt
      run: ./gradlew detekt

    - name: Upload detekt results
      uses: actions/upload-artifact@v3
      with:
        path: build/reports/detekt/detekt.html
      if: always()  # Keep the test result as an artifact even if tests fails

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.projectKey=remotemobprogramming_intellij-mob
          -Dsonar.organization=remotemobprogramming
          -Dsonar.sources=src/main/kotlin
          -Dsonar.exclusions=*.form,**/resources
          -Dsonar.tests=src/test/kotlin
          -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
          -Dsonar.junit.reportPaths=build/test-results/test
          -Dsonar.kotlin.detekt.reportPaths=build/reports//detekt/detekt.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        JAVA_HOME: '' # Avoid 'java: not found' error

    - name: Build plugin
      run: ./gradlew buildPlugin

    - name: Upload build
      uses: actions/upload-artifact@v3
      with:
        path: build/distributions

    # Notification
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow # selectable (default: repo,message)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always() # Pick up events even if the job fails or is canceled.
